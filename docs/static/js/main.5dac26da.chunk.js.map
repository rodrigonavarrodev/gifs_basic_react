{"version":3,"sources":["components/AddCategory.js","helpers/GetGifts.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","console","log","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"uLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,kBAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAKlB,SACE,uBACEO,KAAK,OACLC,MAAST,EACTU,SAlBkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,0FAC0EC,UAC7FH,GAFmB,sBAIEI,MAAMF,GAJR,cAIfG,EAJe,gBAKEA,EAASC,OALX,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAefM,GAfe,4CAAH,sDCEPO,EAAe,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAItC,OAFAc,QAAQC,IAAI,CAACN,KAAIC,QAAOV,QAGpB,sBAAKgB,UAAU,OAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAKR,IACtB,kCAAMA,EAAN,WCLCS,EAAW,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SACzB,ECF2B,SAACA,GAC5B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACC,GACtBH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGZ,CAACtB,IAEGuB,EDb2BK,CAAc5B,GAAlCa,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAEtB,OACE,qCACE,mCAAMtB,EAAN,OAEEsB,EAAU,2CAAoB,KAE9B,qBAAKJ,UAAU,YAAf,SACGL,EAAOJ,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,aEX7BkB,EAAgB,WAIzB,MAAoC3C,mBAAS,CAAC,YAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACI,qCACI,+CACA,cAAE,EAAF,CAAcA,cAAgBA,IAC9B,uBAGA,6BAEQS,EAAWe,KAAK,SAAAT,GACb,OAAO,cAAE,EAAF,CAENA,SAAaA,GADNA,Y,MClB/B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5dac26da.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('Buscar gifs...')\n    \n    const handleInputChange = (e) => {\n        setInputValue( e.target.value )\n    } \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2) {\n            setCategories( categories => [inputValue, ...categories ])\n            setInputValue('')\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n          <input\n            type='text'\n            value= { inputValue }\n            onChange={ handleInputChange }\n          />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=bslawTE4jM7eJ8XVY2OTOg3wcG1JVdDs&q=${encodeURI(\n    category\n  )}&limit=10`;\n  const response = await fetch(url);\n  const { data } = await response.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  \n return gifs;\n\n\n};\n","import React from 'react'\n\nexport const GiftGridItem = ({ id, title, url }) => {\n\n    console.log({id, title, url});\n\n    return (\n        <div className='card'>\n            <img src={ url } alt={title} />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { useFetchGifts } from \"../hooks/useFetchGifts\";\nimport { GiftGridItem } from \"../components/GiftGridItem\"\n\nexport const GiftGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifts(category);\n\n  return (\n    <>\n      <h3> {category} </h3>\n\n      { loading ? <p>Loading...</p> : null}\n      {\n        <div className=\"card-grid\">\n          {images.map((img) => {\n            return <GiftGridItem key={img.id} {...img} />;\n          })}\n        </div>\n      }\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/GetGifts\";\n\nexport const useFetchGifts = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GiftGrid } from './components/GiftGrid'\n\nexport const GiftExpertApp = () => {\n\n    //const categorias = ['Ferrari', 'RedBull', 'Mercedes']\n    \n    const [categories, setCategories] = useState(['Ferrari'])\n\n    // const manejarBotonAgregar = ( ) => {\n    //     setCategorias([...categorias, 'Williams'])\n    // }\n\n    return (\n        <>\n            <h2>GiftExpertApp</h2>\n            < AddCategory setCategories={ setCategories } />\n            <hr />\n\n\n            <ol>\n                {\n                    categories.map( category => {\n                       return < GiftGrid \n                        key= { category }\n                        category = { category } />\n                    })\n                }\n            </ol>\n\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GiftExpertApp />,                                      \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}